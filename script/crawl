#! /usr/bin/env ruby

require 'csv'
require 'site-inspector'

output = []
csv = File.expand_path "../candidates.csv", File.dirname(__FILE__)
candidates = CSV.read(csv, :headers => true)

candidates.each do |candidate|
  domain = candidate["domain"]
  inspector = SiteInspector.inspect domain
  inspector.prefetch

  # simplify the CMS-sniffing output
  cms = inspector.canonical_endpoint.sniffer.cms
  cms = cms.keys.first if cms

  output.push({
    :candidate          => candidate["candidate"],
    :party              => candidate["party"],
    :domain             => inspector.host,
    :www?               => inspector.www?,
    :non_www?           => inspector.root?,
    :https?             => inspector.https?,
    :enforces_https?    => inspector.enforces_https?,
    :downgrades_https?  => inspector.downgrades_https?,
    :canonically_www?   => inspector.canonically_www?,
    :canonically_https? => inspector.canonically_https?,
    :hsts?              => inspector.hsts?,
    :hsts_preload?      => inspector.canonical_endpoint.hsts.preload?,
    :sitemap?           => inspector.canonical_endpoint.content.sitemap_xml?,
    :robots_txt?        => inspector.canonical_endpoint.content.robots_txt?,
    :humans_txt?        => inspector.canonical_endpoint.content.humans_txt?,
    :proper_404s?       => inspector.canonical_endpoint.content.proper_404s?,
    :dnssec?            => inspector.canonical_endpoint.dns.dnssec?,
    :ipv6?              => inspector.canonical_endpoint.dns.ipv6?,
    :cloud_provider     => inspector.canonical_endpoint.dns.cloud_provider,
    :google_apps?       => inspector.canonical_endpoint.dns.google_apps?,
    :server             => inspector.canonical_endpoint.headers.server,
    :cms                => cms,
    :"508_errors"       => inspector.canonical_endpoint.accessibility.errors
  })
end

headings = output.first.keys
CSV.open(csv, "wb") do |csv|
  csv << headings
  output.each do |row|
    csv << row.values
  end
end

def output_check(check, count, candidates)
  percent = (100 * count.to_f/candidates.count.to_f).round(2)
  puts "#{check}: #{count}/#{candidates.count} (#{percent}%)"
end

headings.each do |check|
  next unless check =~ /\?$/
  count = output.map { |r| r[check] }.count { |value| value }
  output_check(check, count, candidates)
end

count = output.map { |r| r[:cms] }.count { |value| [:wordpress, :drupal].include?(value) }
output_check("open_source?", count, candidates)
